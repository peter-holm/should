#!/bin/sh

# start/stop should daemon(s)

# For Debian
### BEGIN INIT INFO
# Provides:          should
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Should file replication and copy helper
# Description:       Should is a daemon which records file change events provided
#                    by inotiry and can replicate such events to another place.
#                    It can also help with remote file copy in cases where rsync
#                    and scp aren't acting properly.
### END INIT INFO

SHOULD_BIN=''
oldIFS="$IFS"
IFS=:
for path in $PATH:/usr/local/bin:/usr/bin
do
    if test -x "$path/should"
    then
	SHOULD_BIN="$path/should"
	ETC_DIR="`echo "$path" | sed -e 's,s*bin,etc,'`"
    fi
done
IFS="$oldIFS"
if [ "$SHOULD_BIN" = '' ]
then
    exit 0
fi

if test -d "$ETC_DIR"
then
    :
elif test -d /usr/local/etc/should
then
    ETC_DIR=/usr/local/etc/should
elif test -d /usr/etc/should
then
    ETC_DIR=/usr/etc/should
elif test -d /etc/should
then
    ETC_DIR=/etc/should
else
    echo "Missing should configuration directory" >&2
    exit 1
fi

cd "$ETC_DIR" || exit 1

stop_daemon () {
    name="$1"
    result=0
    PID="`"$SHOULD_BIN" config="$name" pid 2>/dev/null`"
    if [ "$PID" != '' ]
    then
	"$SHOULD_BIN" config="$name" stop || result=1
	retry=''
	signal=0
	while kill -$signal "$PID" 2>/dev/null
	do
	    sleep 1
	    retry="x$retry"
	    if [ "$retry" = xxxxxxxxxx ]
	    then
		signal=15
	    fi
	    if [ "$retry" = xxxxxxxxxxxxxxx ]
	    then
		signal=9
	    fi
	done
    fi
    return $result
}

case "$1" in
    start)
	title="Starting should daemon:"
	nl=''
	val=0
	for name in *.conf
	do
	    if [ -r "$name" ]
	    then
		PID="`"$SHOULD_BIN" config="$name" pid 2>/dev/null`"
		if [ "$PID" == '' ]
		then
		    echo -n "$title ${name%.conf}"
		    title=''
		    nl='
'
		    "$SHOULD_BIN" 'report:detach=none' config="$name" start detach || val=1
		fi
	    fi
	done
	echo -n "$nl"
	exit $val
	;;
    stop)
	title="Stopping should daemon:"
	nl=''
	val=0
	for name in *.conf
	do
	    if [ -r "$name" ]
	    then
		echo -n "$title ${name%.conf}"
		title=''
		    nl='
'
		stop_daemon "$name" || val=1
	    fi
	done
	echo -n "$nl"
	exit $val
	;;
    restart)
	title="Restarting should daemon:"
	nl=''
	val=0
	for name in *.conf
	do
	    if [ -r "$name" ]
	    then
		PID="`"$SHOULD_BIN" config="$name" pid 2>/dev/null`"
		if [ "$PID" != '' ]
		then
		    echo -n "$title ${name%.conf}"
		    title=''
		    nl='
'
		    stop_daemon "$name" || val=1
		    "$SHOULD_BIN" 'report:detach=none' config="$name" start detach || val=1
		fi
	    fi
	done
	echo -n "$nl"
	exit $val
	;;
    status)
	val=0
	for name in *.conf
	do
	    if [ -r "$name" ]
	    then
		PID="`"$SHOULD_BIN" config="$name" pid 2>/dev/null`"
		if [ "$PID" != '' ]
		then
		    echo "${name%.conf}: running (PID=$PID)"
		else
		    echo "${name%.conf}: NOT running"
		    val=1
		fi
	    fi
	done
	exit $val
	;;
    *)
	echo "Usage: $0 start|stop|status|restart"
	exit 1
	;;
esac

